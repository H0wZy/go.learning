package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"

	"github.com/H0wZy/go.learning/generated"
	"github.com/H0wZy/go.learning/model"
)

// CreateBasicInfo is the resolver for the createBasicInfo field.
func (r *mutationResolver) CreateBasicInfo(ctx context.Context, basicInfo model.BasicInfoInput) (*model.BasicInfo, error) {
	panic(fmt.Errorf("not implemented: CreateBasicInfo - createBasicInfo"))
}

// UpdateBasicInfo is the resolver for the updateBasicInfo field.
func (r *mutationResolver) UpdateBasicInfo(ctx context.Context, id string, basicInfo model.BasicInfoInput) (*model.BasicInfo, error) {
	panic(fmt.Errorf("not implemented: UpdateBasicInfo - updateBasicInfo"))
}

// DeleteBasicInfo is the resolver for the deleteBasicInfo field.
func (r *mutationResolver) DeleteBasicInfo(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteBasicInfo - deleteBasicInfo"))
}

// GetBasicInfo is the resolver for the getBasicInfo field.
func (r *queryResolver) GetBasicInfo(ctx context.Context, id string) (*model.BasicInfo, error) {
	panic(fmt.Errorf("not implemented: GetBasicInfo - getBasicInfo"))
}

// GetBasicInfos is the resolver for the getBasicInfos field.
func (r *queryResolver) GetBasicInfos(ctx context.Context) ([]*model.BasicInfo, error) {
	panic(fmt.Errorf("not implemented: GetBasicInfos - getBasicInfos"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
